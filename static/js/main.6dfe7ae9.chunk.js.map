{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","className","s","title","StatisticsFeedback","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","list","Object","keys","map","option","item","btn","type","onClick","toUpperCase","substring","Section","children","container","Feedback","state","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","handleImcrement","e","btnName","currentTarget","textContent","toLowerCase","forEach","key","setState","prevState","this","Statistics","Component","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,IAAM,+B,iBCAlGD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,oBCAjED,EAAOC,QAAU,CAAC,MAAQ,8B,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,4B,qKCUXC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGC,UAAWC,IAAEC,MAAhB,SAAwBH,K,iBCiClBI,EAjCY,SAAC,GAAD,IACzBC,EADyB,EACzBA,KACAC,EAFyB,EAEzBA,QACAC,EAHyB,EAGzBA,IACAC,EAJyB,EAIzBA,MACAC,EALyB,EAKzBA,mBALyB,OAOzB,qCACE,oBAAIR,UAAWC,IAAEC,MAAjB,wBAECK,EAAQ,EACP,gCACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KAEX,oDAAuBC,EAAvB,UAGF,cAAC,EAAD,CAAcT,QAAQ,0B,gBCFbU,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,oBAAIX,UAAWC,IAAEW,KAAjB,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAM,OAC9B,oBAAIhB,UAAWC,IAAEgB,KAAjB,SACE,wBAAQjB,UAAWC,IAAEiB,IAAKC,KAAK,SAASC,QAAST,EAAjD,SACGK,EAAO,GAAGK,cAAgBL,EAAOM,UAAU,MAFpBN,S,gBCSrBO,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUtB,EAAY,EAAZA,MAC3B,OACE,sBAAKF,UAAWC,IAAEwB,UAAlB,UACE,oBAAIzB,UAAWC,IAAEC,MAAjB,SAAyBA,IACxBsB,MCgDQE,E,4MAhDbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,gCAAkC,kBAChC,EAAKD,MAAMvB,KACPyB,KAAKC,MAAyB,IAAlB,EAAKH,MAAMvB,KAAc,EAAK2B,sBAC1C,G,EAENA,mBAAqB,kBACnB,EAAKJ,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,K,EAEpD0B,gBAAkB,SAAAC,GAChB,IAAMC,EAAUD,EAAEE,cAAcC,YAAYC,cAE5CxB,OAAOC,KAAK,EAAKa,OAAOW,SAAQ,SAAAC,GAC1BL,IAAYK,GACd,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAME,EAAUF,GAAO,U,4CAMhC,WACE,OACE,eAAC,EAAD,CAASrC,MAAM,yBAAf,UACE,cAAC,EAAD,CACEQ,QAASgC,KAAKf,MACdhB,gBAAiB+B,KAAKV,kBAKxB,cAACW,EAAD,CACEvC,KAAMsC,KAAKf,MAAMvB,KACjBC,QAASqC,KAAKf,MAAMtB,QACpBC,IAAKoC,KAAKf,MAAMrB,IAChBC,MAAOmC,KAAKX,qBACZvB,mBAAoBkC,KAAKd,2C,GA1CZgB,aCFvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6dfe7ae9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2Goxc\",\"item\":\"FeedbackOptions_item__3xovq\",\"btn\":\"FeedbackOptions_btn__2C91z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1wnxy\",\"title\":\"Section_title__1Zrmu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__2FqjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3R1Bq\"};","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.title}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport s from './Statistics.module.css';\n\nconst StatisticsFeedback = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => (\n  <>\n    <h2 className={s.title}>Statistics</h2>\n\n    {total > 0 ? (\n      <div>\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {total}</p>\n\n        <p>Positive feedback: {positivePercentage}%</p>\n      </div>\n    ) : (\n      <Notification message=\"No feedback given\" />\n    )}\n  </>\n);\n\nStatisticsFeedback.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default StatisticsFeedback;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.list}>\n      {Object.keys(options).map(option => (\n        <li className={s.item} key={option}>\n          <button className={s.btn} type=\"button\" onClick={onLeaveFeedback}>\n            {option[0].toUpperCase() + option.substring(1)}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ children, title }) => {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import React, { Component } from 'react';\nimport './index.css';\nimport StatisticsFeedback from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countPositiveFeedbackPercentage = () =>\n    this.state.good\n      ? Math.round((this.state.good * 100) / this.countTotalFeedback())\n      : 0;\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  handleImcrement = e => {\n    const btnName = e.currentTarget.textContent.toLowerCase();\n\n    Object.keys(this.state).forEach(key => {\n      if (btnName === key) {\n        this.setState(prevState => ({\n          [key]: prevState[key] + 1,\n        }));\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Section title=\"Please leaven feedback\">\n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.handleImcrement}\n        />\n\n        {}\n\n        <StatisticsFeedback\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}